package guilibrarysystem;

import DataBase.Book;
import DataBase.User;
import Network.LibraryClient;
import java.io.IOException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author mahab
 */
public class Search extends javax.swing.JFrame {

    private User currentUser;
   

    /**
     * Creates new form Search
     */
    public Search(User user) {
        this.currentUser = user;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchBookName = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        bookName = new javax.swing.JLabel();
        authorName = new javax.swing.JLabel();
        searchAuthorName = new javax.swing.JTextField();
        iconSearch = new javax.swing.JLabel();
        back2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search");
        setBackground(new java.awt.Color(204, 204, 204));
        setForeground(new java.awt.Color(204, 204, 204));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        searchLabel.setFont(new java.awt.Font("Showcard Gothic", 1, 36)); // NOI18N
        searchLabel.setForeground(new java.awt.Color(255, 204, 153));
        searchLabel.setText("SEARCH BOOKS");

        searchBookName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        searchBookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookNameActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(255, 204, 153));
        searchBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(255, 255, 255));
        searchBtn.setText("SEARCH");
        searchBtn.setVerifyInputWhenFocusTarget(false);
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        bookName.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        bookName.setForeground(new java.awt.Color(255, 255, 255));
        bookName.setText("Book Name");

        authorName.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        authorName.setForeground(new java.awt.Color(255, 255, 255));
        authorName.setText("Author");

        searchAuthorName.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        searchAuthorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAuthorNameActionPerformed(evt);
            }
        });

        iconSearch.setForeground(new java.awt.Color(255, 204, 153));
        iconSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        iconSearch.setPreferredSize(new java.awt.Dimension(36, 36));

        back2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/left-arrow (2).png"))); // NOI18N
        back2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                back2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(219, 219, 219)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(bookName)
                                .addComponent(searchBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(authorName)
                                .addComponent(searchAuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(searchLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(iconSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(114, 114, 114)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                            .addComponent(iconSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(authorName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchAuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(96, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchBookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBookNameActionPerformed
        // TODO add your handling code here:
        String bookN = bookName.getText();
    }//GEN-LAST:event_searchBookNameActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:                                 
        
        try (LibraryClient client = new LibraryClient("localhost", 12345)) {
            // Get user input
            String bookTitle = searchBookName.getText().trim();
            String bookAuthor = searchAuthorName.getText().trim();

            // Validate user input
            if (bookTitle.isEmpty() && bookAuthor.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter at least one search criterion (title or author).");
                return;
            }

            // Prepare SEARCH_BOOK request
            String request = "SEARCH_BOOK|" + bookTitle + "|" + bookAuthor;

            // Send request to server
            String response = client.sendRequest(request);
            System.out.println("Server Response: " + response); ///mod
            // Handle server response
            if (response.startsWith("SUCCESS")) {
                String[] bookDetails = response.split("\\|");

                // Ensure response has the expected number of fields
                if (bookDetails.length < 6) {
                    JOptionPane.showMessageDialog(this, "Invalid server response. Please contact support.");
                    return;
                }

                // Parse response fields safely
                int bookId = Integer.parseInt(bookDetails[1]);  // Parse book ID
                String bookName = bookDetails[2];               // Book name
                String author = bookDetails[3];                 // Author name
                String status = bookDetails[4];                 // Status (e.g., "Available")
                int quantity = Integer.parseInt(bookDetails[5]); // Parse quantity

                // Show success message and open FoundedBook window
                JOptionPane.showMessageDialog(this, "Book Found: " + bookName + " by " + author);
                Book foundBook = new Book(bookId, bookName, author, status, quantity);
                FoundedBook f = new FoundedBook(foundBook, currentUser);
                f.setVisible(true);
                this.dispose();
            } else {
                // Handle case where the book is not found
                JOptionPane.showMessageDialog(this, "No book found with the given details.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error parsing server response. Please contact support.", "Parsing Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Error connecting to the server: " + e.getMessage(), "Connection Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchAuthorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAuthorNameActionPerformed
        // TODO add your handling code here:
        String author = authorName.getText();

    }//GEN-LAST:event_searchAuthorNameActionPerformed

    private void back2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_back2MouseClicked
        // TODO add your handling code here:
        MainD m = new MainD(currentUser);
        m.initialize();
        m.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_back2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//           public void run() {
//                new Search().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorName;
    private javax.swing.JLabel back2;
    private javax.swing.JLabel bookName;
    private javax.swing.JLabel iconSearch;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField searchAuthorName;
    public javax.swing.JTextField searchBookName;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel searchLabel;
    // End of variables declaration//GEN-END:variables
}
