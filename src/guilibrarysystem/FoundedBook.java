package guilibrarysystem;

import javax.swing.*;
import DataBase.Book;
import DataBase.User;
import static DataBase.book_CRUD.updateBookStatus;
import Network.LibraryClient;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

public class FoundedBook extends javax.swing.JFrame {

    String bookname;
    String author;
    String status;
    private Book book;
    private User currentUser;

    public FoundedBook(Book book, User user) {
        initComponents();
        this.currentUser = user;
        this.book = book;
        initializeFields();
    }

    private void initializeFields() {
        if (book != null) {
            bookNameTxt.setText(this.book.getBookname());
            bookAuthorTxt.setText(this.book.getAuthor());
            bookStatTxt.setText(this.book.getStatus());
            bookIDTxt1.setText(Integer.toString(this.book.getId()));
        } else {
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bookName = new javax.swing.JLabel();
        bookAuthor = new javax.swing.JLabel();
        bookStatus = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        borrowBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        bookNameTxt = new javax.swing.JTextField();
        bookAuthorTxt = new javax.swing.JTextField();
        bookStatTxt = new javax.swing.JTextField();
        bookID = new javax.swing.JLabel();
        bookIDTxt1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search Result");
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        bookName.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        bookName.setForeground(new java.awt.Color(255, 255, 255));
        bookName.setText("Book Name");

        bookAuthor.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        bookAuthor.setForeground(new java.awt.Color(255, 255, 255));
        bookAuthor.setText("Author");

        bookStatus.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        bookStatus.setForeground(new java.awt.Color(255, 255, 255));
        bookStatus.setText("Book Status");

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 60));

        jLabel7.setFont(new java.awt.Font("Showcard Gothic", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("FOUNDED BOOK");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jLabel7)
                .addContainerGap(247, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel7)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        borrowBtn.setBackground(new java.awt.Color(255, 204, 153));
        borrowBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        borrowBtn.setForeground(new java.awt.Color(255, 255, 255));
        borrowBtn.setText("BORROW");
        borrowBtn.setPreferredSize(new java.awt.Dimension(109, 33));
        borrowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(255, 204, 153));
        cancelBtn.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelBtn.setText("CANCEL");
        cancelBtn.setPreferredSize(new java.awt.Dimension(109, 33));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        bookNameTxt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bookNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNameTxtActionPerformed(evt);
            }
        });

        bookAuthorTxt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bookAuthorTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAuthorTxtActionPerformed(evt);
            }
        });

        bookStatTxt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bookStatTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookStatTxtActionPerformed(evt);
            }
        });

        bookID.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        bookID.setForeground(new java.awt.Color(255, 255, 255));
        bookID.setText("Book ID ");

        bookIDTxt1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bookIDTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookIDTxt1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(bookAuthor)
                                    .addComponent(bookName)
                                    .addComponent(bookStatus)
                                    .addComponent(bookID))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bookNameTxt)
                                    .addComponent(bookAuthorTxt)
                                    .addComponent(bookStatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bookIDTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(borrowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookName)
                    .addComponent(bookNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookAuthor)
                    .addComponent(bookAuthorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookStatus)
                    .addComponent(bookStatTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookIDTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookID))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(borrowBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bookNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNameTxtActionPerformed
        // TODO add your handling code here:
        bookNameTxt.setText(bookname);

    }//GEN-LAST:event_bookNameTxtActionPerformed

    private void bookAuthorTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAuthorTxtActionPerformed
        // TODO add your handling code here:
        bookAuthorTxt.setText(author);
    }//GEN-LAST:event_bookAuthorTxtActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        Search s = new Search(currentUser);
        s.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_cancelBtnActionPerformed

    private void borrowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowBtnActionPerformed
        // Ensure the book is available for borrowing
        if (book.getStatus().equalsIgnoreCase("Available")) {
            try {
                // Ensure the user is logged in
                if (currentUser == null) {
                    JOptionPane.showMessageDialog(this, "You must be logged in to borrow a book.", "Login Required", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                // Get current date for borrowing
                java.util.Date currentDate = new java.util.Date();
                java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
                String borrowDate = dateFormat.format(currentDate);

                // Calculate return date (e.g., 14 days later)
                java.util.Calendar calendar = java.util.Calendar.getInstance();
                calendar.setTime(currentDate);
                calendar.add(java.util.Calendar.DAY_OF_MONTH, 14); // Add 14 days
                String returnDate = dateFormat.format(calendar.getTime());

                // Prepare borrowing request to the server
                String request = "BORROW_BOOK|" + book.getId() + "|" + currentUser.getId() + "|" + borrowDate + "|" + returnDate;
               

                // Send the request to the server using LibraryClient
                LibraryClient client = new LibraryClient("localhost", 12345); // Adjust server details as needed
                String response = client.sendRequest(request);
                client.close();

                // Process server response
                if (response.equalsIgnoreCase("SUCCESS")) {
                    // Update book quantity and UI
                    book.setQuantity(book.getQuantity() - 1); // Decrease by 1
                    int newQuantity = book.getQuantity();
                    updateBookStatus(book.getId(),newQuantity);

                    if (newQuantity == 0) {
                        bookStatTxt.setText("Unavailable");
                        book.setStatus("Unavailable"); // Update local book object status
                    } else {
                        bookStatTxt.setText("Available");
                    }

                    // Log the borrowing action
                    logBorrowingAction(currentUser.getId(), book.getId(), borrowDate, returnDate);

                    // Refresh the UI to reflect changes
                    refreshBorrowingHistory();

                    JOptionPane.showMessageDialog(this, "Book borrowed successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to borrow book: " + response, "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error connecting to the server: " + e.getMessage(), "Connection Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "This book is not available for borrowing.", "Unavailable", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_borrowBtnActionPerformed

    private void logBorrowingAction(int userId, int bookId, String borrowDate, String returnDate) {
        try (FileWriter fw = new FileWriter("borrowing_logs.txt", true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter out = new PrintWriter(bw)) {

            out.println("User ID: " + userId + ", Book ID: " + bookId
                    + ", Borrow Date: " + borrowDate + ", Return Date: " + returnDate);
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to log borrowing action: " + e.getMessage(), "Logging Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void refreshBorrowingHistory() throws IOException {
        BorrowingHistoryFrame historyFrame = new BorrowingHistoryFrame(currentUser);
        historyFrame.setVisible(true);
        this.dispose(); // Close current frame
    }


    private void bookStatTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookStatTxtActionPerformed
        // TODO add your handling code here:
        bookStatTxt.setText(this.book.getStatus());
    }//GEN-LAST:event_bookStatTxtActionPerformed

    private void bookIDTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookIDTxt1ActionPerformed
        // TODO add your handling code here:
        bookIDTxt1.setText(Integer.toString(this.book.getId()));

    }//GEN-LAST:event_bookIDTxt1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FoundedBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FoundedBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FoundedBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FoundedBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookAuthor;
    private javax.swing.JTextField bookAuthorTxt;
    private javax.swing.JLabel bookID;
    private javax.swing.JTextField bookIDTxt1;
    private javax.swing.JLabel bookName;
    private javax.swing.JTextField bookNameTxt;
    private javax.swing.JTextField bookStatTxt;
    private javax.swing.JLabel bookStatus;
    private javax.swing.JButton borrowBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
